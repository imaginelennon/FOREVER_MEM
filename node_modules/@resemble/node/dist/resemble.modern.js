import e from"isomorphic-fetch";import t from"isomorphic-form-data";let a="",r="https://app.resemble.ai/api/",s="";const c={"Content-Type":"application/json","x-access-token":`${a}`},n={"Content-Type":"application/json",Authorization:`Token token=${a}`},i={headers:()=>n,synthesisServerHeaders:()=>c,setBaseUrl:e=>{r=e,e.endsWith("/")||(r+="/")},setApiKey:e=>{a=e,n.Authorization=`Token token=${e}`,c["x-access-token"]=e},setSynthesisUrl:e=>{s=e,e.endsWith("/")||(s+="/")},endpoint:(e,t)=>{let a=t.startsWith("/")?t.substring(1):t;return`${r}${e}/${a}`},synServerUrl:e=>{let t=e.startsWith("/")?e.substring(1):e;return`${s}${t}`}};function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},d.apply(this,arguments)}var o=(e,t=!1)=>fetch((t?i.synServerUrl:i.endpoint)("v2",e),{method:"GET",headers:t?i.synthesisServerHeaders():i.headers()}),u=(e,t={},a=!1)=>fetch((a?i.synServerUrl:i.endpoint)("v2",e),{method:"POST",headers:a?i.synthesisServerHeaders():i.headers(),body:JSON.stringify(t)}),p=(e,t={},a=!1)=>fetch((a?i.synServerUrl:i.endpoint)("v2",e),{method:"PUT",headers:a?i.synthesisServerHeaders():i.headers(),body:JSON.stringify(t)}),y=(e,t=!1)=>fetch((t?i.synServerUrl:i.endpoint)("v2",e),{method:"DELETE",headers:t?i.synthesisServerHeaders():i.headers()}),m=e=>({success:!1,message:`Library error: ${e}`}),l={all:async(e,t)=>{try{const a=await o(`projects?page=${e}${t?`&page_size=${t}`:""}`),r=await a.json();return r.success&&r.items.map(e=>d({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),r}catch(e){return m(e)}},get:async e=>{try{const t=await o(`projects/${e}`);let a=await t.json();return a.success&&(a=d({},a,{item:d({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return m(e)}},create:async e=>{try{const t=await u("projects",e);let a=await t.json();return a.success&&(a=d({},a,{item:d({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return m(e)}},update:async(e,t)=>{try{const a=await p(`projects/${e}`,t);let r=await a.json();return r.success&&(r=d({},r,{item:d({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return m(e)}},destroy:async e=>{try{return(await y(`projects/${e}`)).json()}catch(e){return m(e)}}};const w=async(e,t)=>{try{const a=await u(`projects/${e}/clips`,t);let r=await a.json();return r.success&&(r=d({},r,{item:d({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return m(e)}};var _={all:async(e,t,a)=>{try{const r=await o(`projects/${e}/clips?page=${t}${a?`&page_size=${a}`:""}`),s=await r.json();return s.success&&s.items.map(e=>d({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),s}catch(e){return m(e)}},get:async(e,t)=>{try{const a=await o(`projects/${e}/clips/${t}`);let r=await a.json();return r.success&&(r=d({},r,{item:d({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return m(e)}},createAsync:async(e,t)=>w(e,t),createSync:async(e,t)=>w(e,t),updateAsync:async(e,t,a)=>{try{const r=await p(`projects/${e}/clips/${t}`,a);let s=await r.json();return s.success&&(s=d({},s,{item:d({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return m(e)}},destroy:async(e,t)=>{try{return(await y(`projects/${e}/clips/${t}`)).json()}catch(e){return m(e)}}},h={all:async(e,t,a)=>{try{const r=await o(`voices/${e}/recordings?page=${t}${a?`&page_size=${a}`:""}`),s=await r.json();return s.success&&s.items.map(e=>d({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),s}catch(e){return m(e)}},get:async(e,t)=>{try{const a=await o(`voices/${e}/recordings/${t}`);let r=await a.json();return r.success&&(r=d({},r,{item:d({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return m(e)}},create:async(a,r,s,c)=>{try{const n=new t;n.append("name",r.name),n.append("text",r.text),n.append("emotion",r.emotion),n.append("is_active",r.is_active?"true":"false"),n.append("file",s,{knownLength:c});const o=await e(i.endpoint("v2",`voices/${a}/recordings`),{method:"POST",headers:d({Authorization:i.headers().Authorization,"Content-Type":"multipart/form-data"},n.getHeaders?n.getHeaders():{}),body:n});let u=await o.json();return u.success&&(u=d({},u,{item:d({},u.item,{created_at:new Date(u.item.created_at),updated_at:new Date(u.item.updated_at)})})),u}catch(e){return m(e)}},update:async(e,t,a)=>{try{const r=await p(`voices/${e}/recordings/${t}`,a);let s=await r.json();return s.success&&(s=d({},s,{item:d({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return m(e)}},destroy:async(e,t)=>{try{return(await y(`voices/${e}/recordings/${t}`)).json()}catch(e){return m(e)}}},$={all:async(e,t)=>{try{const a=await o(`voices?page=${e}${t?`&page_size=${t}`:""}`),r=await a.json();return r.success&&r.items.map(e=>d({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),r}catch(e){return m(e)}},get:async e=>{try{const t=await o(`voices/${e}`);let a=await t.json();return a.success&&(a=d({},a,{item:d({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return m(e)}},create:async e=>{try{const t=await u("voices",e);let a=await t.json();return a.success&&(a=d({},a,{item:d({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return m(e)}},update:async(e,t)=>{try{const a=await p(`voices/${e}`,t);let r=await a.json();return r.success&&(r=d({},r,{item:d({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return m(e)}},destroy:async e=>{try{return(await y(`voices/${e}`)).json()}catch(e){return m(e)}},build:async e=>{try{return(await u(`voices/${e}/build`)).json()}catch(e){return m(e)}}};const g={setApiKey:i.setApiKey,setBaseUrl:i.setBaseUrl,setSynthesisUrl:i.setSynthesisUrl,v2:{projects:{all:l.all,create:l.create,update:l.update,get:l.get,delete:l.destroy},clips:{all:_.all,createSync:_.createSync,createAsync:_.createAsync,updateAsync:_.updateAsync,get:_.get,delete:_.destroy},voices:{all:$.all,create:$.create,update:$.update,build:$.build,get:$.get,delete:$.destroy},recordings:{all:h.all,get:h.get,create:h.create,update:h.update,delete:h.destroy}}};export{g as Resemble};
//# sourceMappingURL=resemble.modern.js.map
